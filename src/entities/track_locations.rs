//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "track_locations")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub location: Option<String>,
    pub filename: Option<String>,
    pub directory: Option<String>,
    pub filesize: Option<i32>,
    pub fs_deleted: Option<i32>,
    pub needs_verification: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::library::Entity")]
    Library,
    #[sea_orm(has_many = "super::track_analysis::Entity")]
    TrackAnalysis,
}

impl Related<super::library::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Library.def()
    }
}

impl Related<super::track_analysis::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TrackAnalysis.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
