//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rhythmbox_playlist_tracks")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub playlist_id: Option<i32>,
    pub track_id: Option<i32>,
    pub position: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::rhythmbox_library::Entity",
        from = "Column::TrackId",
        to = "super::rhythmbox_library::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    RhythmboxLibrary,
    #[sea_orm(
        belongs_to = "super::rhythmbox_playlists::Entity",
        from = "Column::PlaylistId",
        to = "super::rhythmbox_playlists::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    RhythmboxPlaylists,
}

impl Related<super::rhythmbox_library::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RhythmboxLibrary.def()
    }
}

impl Related<super::rhythmbox_playlists::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RhythmboxPlaylists.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
