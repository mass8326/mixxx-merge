name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
permissions:
  contents: write
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - id: check
        name: Check version
        uses: technote-space/package-version-check-action@v1
        with:
          COMMIT_DISABLED: 1
      - id: create
        name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: MixxxKit ${{ github.ref_name }}
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
  upload:
    name: Upload asset (${{ matrix.config.asset_name }})
    needs: release
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            cmd: sudo apt install -y musl-tools
            target: x86_64-unknown-linux-musl
            asset_file: mixxxkit
            asset_name: mixxxkit-linux
          - os: macos-latest
            cmd: echo 'No native dependencies needed'
            target: x86_64-apple-darwin
            asset_file: mixxxkit
            asset_name: mixxxkit-macos
          - os: windows-latest
            cmd: echo 'No native dependencies needed'
            target: x86_64-pc-windows-msvc
            asset_file: mixxxkit.exe
            asset_name: mixxxkit-windows.exe
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.config.target }}
      - run: ${{ matrix.config.cmd }} && cargo build --release --target ${{ matrix.config.target }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_name: ${{ matrix.config.asset_name }}
          asset_path: ./target/${{ matrix.config.target }}/release/${{ matrix.config.asset_file }}
          asset_content_type: application/octet-stream
