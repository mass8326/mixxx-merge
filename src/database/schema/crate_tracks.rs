//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "crate_tracks")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub crate_id: i32,
    #[sea_orm(primary_key)]
    pub track_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::crates::Entity",
        from = "Column::CrateId",
        to = "super::crates::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Crates,
    #[sea_orm(
        belongs_to = "super::library::Entity",
        from = "Column::TrackId",
        to = "super::library::Column::Id"
    )]
    Library,
}

impl Related<super::crates::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Crates.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
